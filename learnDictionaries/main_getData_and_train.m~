
%Obtain statistics on the videos 
L=8;

%get Image info
disp(['Get filters:'])
J = 4;
Ni= 128;%2^J;%sqrt(Na*2^(J-1));
[filters_image, options_image,lpal] = generate_translate_wavelets([Ni Ni], J, L, 'image');
%for reconstruction 
path='/Users/ferradans/Documents/Research/Audification/data/bigimages/';

Totalnum_im = 4000;
dirimages = dir([path '*.JPEG']);

linearindx = @(v)(v(1)-1).*L+v(2);
k = J*L/2; %sparsity value

%Initialize
for j2=2:J
    for l2=1:L
         X{j2}{l2}= [];
    end 
end


for i_im = 1:min(size(dirimages,1),Totalnum_im)
    image = double(imread([path dirimages(i_im).name]));
    image = imresize(image(:,:,1),[Ni,Ni]);

    [Si,Y2] = scattering2d(image,filters_image, options_image);

    for j2=2:J
        for l2=1:L
            lambda2=[j2 l2];
            aux=getDatabase_onY2(Y2,lambda2,J,Ni);
            X{linearindx(lambda2)}=cat(2,X{linearindx(lambda2)},aux);
            
            [j2 size(D)]
         %   filters_image{3}{linearindx(lambda2)} = learn_dict(double(D),k);
        end 
    end 

end 

%X=D,alpha
 for j2=2:J
    for l2=1:L
        [auxD,auxalpha]= learn_dict(double(X{linearindx(lambda2)}),k);
    end 
 end 
       
